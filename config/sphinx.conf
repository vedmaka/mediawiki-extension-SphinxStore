#
# Sphinx configuration for MediaWiki
#
# Based on examples by Paul Grinberg at http://www.mediawiki.org/wiki/Extension:SphinxSearch
# and Hank at http://www.ralree.info/2007/9/15/fulltext-indexing-wikipedia-with-sphinx
# Modified by Svemir Brkic for http://www.newworldencyclopedia.org/
#
# Released under GNU General Public License (see http://www.fsf.org/licenses/gpl.html)
#
# Latest version available at http://www.mediawiki.org/wiki/Extension:SphinxSearch

# data source definition for the main index
source src_wiki_main
{
	# data source
	type		= mysql
	sql_host	= localhost
	sql_db		= settlein
	sql_user	= root
	sql_pass	= mysql
	# these two are optional
	#sql_port	= 3306
	#sql_sock	= /var/lib/mysql/mysql.sock

	# pre-query, executed before the main fetch query
	sql_query_pre	= SET NAMES utf8

	# main document fetch query - change the table names if you are using a prefix
	sql_query	= \
	    SELECT page_id, page_title, page_namespace, page_is_redirect, old_id, old_text, o_hash AS semantic_title \
        FROM page, revision, text, smw_di_blob, smw_object_ids \
        WHERE rev_id=page_latest AND old_id=rev_text_id AND page_namespace=0 AND smw_title = page_title AND s_id = smw_id AND p_id = 61

	# attribute columns
	sql_attr_uint	= page_namespace
	sql_attr_uint	= page_is_redirect
	sql_attr_uint	= old_id
	sql_attr_string = page_title

    sql_field_string = semantic_title

	#sql_joined_field = semantic_title from query; SELECT page_id, o_hash FROM page, smw_di_blob, smw_object_ids WHERE smw_title = page_title AND s_id = smw_id AND p_id = 61

	# collect all category ids for category filtering
	sql_attr_multi  = uint category from query; SELECT cl_from, page_id AS category FROM categorylinks, page WHERE page_title=cl_to AND page_namespace=14

	# collect geonames
	sql_attr_multi  = uint geonames_id from query; SELECT page_id, o_serialized FROM page, smw_di_number, smw_object_ids WHERE smw_title = page_title AND s_id = smw_id AND p_id = 294
}

# real-time index definition
# TODO: I guess we should use separate indexes: one per language, see below for reason
index wiki_rt {

    type = rt
    path = C:\sphinx\data\wiki_rt
    rt_mem_limit = 512M

    # Alias title will be stored here to be indexed
    rt_field = title
    # Page content or specified set of properties will be stored here to be indexed
    rt_field = content

    # store document language from $wgLang->getCode()
    # TODO: idea was bad, because we're not allowed to have duplicated document IDs
    #rt_attr_string = language
    # store real page title ( like "Record_1", etc )
    rt_attr_string = page_title
    # store alias page title provided by SemanticTitle
    rt_attr_string = alias_title
    # store modification date in UNIX format
    rt_attr_timestamp = modification_date

    # store all normalized values of semantic properties here, plese see code for normalization details
    rt_attr_json = properties

    # TODO: add multilingual support
    morphology	= stem_en, libstemmer_en

    # expand search keywords for wider matches
    expand_keywords = 1

    # index exact keywords for better matches
    index_exact_words = 1

    # minimum word length
    min_word_len	= 3

    # allow wildcard (*) searches
    min_infix_len = 1

    # strip all HTML entities, we don't need them here
    html_strip = 1

    #wordforms = C:\sphinx\wordforms.txt

    # charset definition and case folding rules "table"
    #charset_table	= 0..9, A..Z->a..z, a..z, \
    #	U+C0->a, U+C1->a, U+C2->a, U+C3->a, U+C4->a, U+C5->a, U+C6->a, \
    #	U+C7->c,U+E7->c, U+C8->e, U+C9->e, U+CA->e, U+CB->e, U+CC->i, \
    #	U+CD->i, U+CE->i, U+CF->i, U+D0->d, U+D1->n, U+D2->o, U+D3->o, \
    #	U+D4->o, U+D5->o, U+D6->o, U+D8->o, U+D9->u, U+DA->u, U+DB->u, \
    #	U+DC->u, U+DD->y, U+DE->t, U+DF->s, \
    #	U+E0->a, U+E1->a, U+E2->a, U+E3->a, U+E4->a, U+E5->a, U+E6->a, \
    #	U+E7->c,U+E7->c, U+E8->e, U+E9->e, U+EA->e, U+EB->e, U+EC->i, \
    #	U+ED->i, U+EE->i, U+EF->i, U+F0->d, U+F1->n, U+F2->o, U+F3->o, \
    #	U+F4->o, U+F5->o, U+F6->o, U+F8->o, U+F9->u, U+FA->u, U+FB->u, \
    #	U+FC->u, U+FD->y, U+FE->t, U+FF->s,

}

# RT-index for Russian language
index wiki_rt_ru {

    type = rt
    path = C:\sphinx\data\wiki_rt_ru
    rt_mem_limit = 512M
    rt_field = title
    rt_field = content
    rt_attr_string = page_title
    rt_attr_string = alias_title
    rt_attr_timestamp = modification_date
    rt_attr_json = properties
    morphology	= stem_ru, libstemmer_ru
    expand_keywords = 1
    index_exact_words = 1
    min_word_len	= 3
    min_infix_len = 1
    html_strip = 1

}

# main index definition
index wiki_main
{
	# which document source to index
	source		= src_wiki_main

	# this is path and index file name without extension
	# you may need to change this path or create this folder
	path		= C:\sphinx\data\wiki_main

	# docinfo (ie. per-document attribute values) storage strategy
	docinfo		= extern

	# morphology
	morphology	= stem_en

	# stopwords file
	#stopwords	= /var/data/sphinx/stopwords.txt

	# minimum word length
	min_word_len	= 3

	# allow wildcard (*) searches
	min_infix_len = 3

	# charset definition and case folding rules "table"
	#charset_table	= 0..9, A..Z->a..z, a..z, \
	#	U+C0->a, U+C1->a, U+C2->a, U+C3->a, U+C4->a, U+C5->a, U+C6->a, \
	#	U+C7->c,U+E7->c, U+C8->e, U+C9->e, U+CA->e, U+CB->e, U+CC->i, \
	#	U+CD->i, U+CE->i, U+CF->i, U+D0->d, U+D1->n, U+D2->o, U+D3->o, \
	#	U+D4->o, U+D5->o, U+D6->o, U+D8->o, U+D9->u, U+DA->u, U+DB->u, \
	#	U+DC->u, U+DD->y, U+DE->t, U+DF->s, \
	#	U+E0->a, U+E1->a, U+E2->a, U+E3->a, U+E4->a, U+E5->a, U+E6->a, \
	#	U+E7->c,U+E7->c, U+E8->e, U+E9->e, U+EA->e, U+EB->e, U+EC->i, \
	#	U+ED->i, U+EE->i, U+EF->i, U+F0->d, U+F1->n, U+F2->o, U+F3->o, \
	#	U+F4->o, U+F5->o, U+F6->o, U+F8->o, U+F9->u, U+FA->u, U+FB->u, \
	#	U+FC->u, U+FD->y, U+FE->t, U+FF->s,

}

# indexer settings
indexer
{
	# memory limit (default is 32M)
	mem_limit	= 64M
}

# searchd settings
searchd
{
	# IP address and port on which search daemon will bind and accept
	listen		= 127.0.0.1:9312
	listen      = 127.0.0.1:9313:mysql41

	# searchd run info is logged here - create or change the folder
	log		= C:\sphinx\searchd.log

	# all the search queries are logged here
	query_log	= C:\sphinx\query.log

	# client read timeout, seconds
	read_timeout	= 5

	# maximum amount of children to fork
	max_children	= 30

	# a file which will contain searchd process ID
	pid_file	= C:\sphinx\searchd.pid

	workers = threads

}

common
{
    lemmatizer_base = C:\sphinx
}

# --eof--
